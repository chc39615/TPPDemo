// <auto-generated />
using System;
using DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(TPPContext))]
    [Migration("20210511085845_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Models.CMSFunction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FunctionName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ParentFunctionId")
                        .HasColumnType("int");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CMSFunction");
                });

            modelBuilder.Entity("DAL.Models.CMSPermission", b =>
                {
                    b.Property<int>("FunctionId")
                        .HasColumnType("int");

                    b.Property<int>("BelongToId")
                        .HasColumnType("int");

                    b.Property<byte>("IdentityType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CMSFunctionId")
                        .HasColumnType("int");

                    b.Property<int?>("StaffAccountId")
                        .HasColumnType("int");

                    b.HasKey("FunctionId", "BelongToId", "IdentityType");

                    b.HasIndex("CMSFunctionId");

                    b.HasIndex("StaffAccountId");

                    b.ToTable("CMSPermissions");
                });

            modelBuilder.Entity("DAL.Models.CMSRoleMember", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("AccountId", "RoleId");

                    b.ToTable("CMSRoleMember");
                });

            modelBuilder.Entity("DAL.Models.ContactAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OwnerID")
                        .HasColumnType("int");

                    b.Property<byte>("OwnerType")
                        .HasColumnType("tinyint");

                    b.Property<string>("PostCode")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OwnerID", "OwnerType");

                    b.ToTable("ContactAddresses");
                });

            modelBuilder.Entity("DAL.Models.ContactEmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("OwnerID")
                        .HasColumnType("int");

                    b.Property<byte>("OwnerType")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OwnerID", "OwnerType");

                    b.ToTable("ContactEmails");
                });

            modelBuilder.Entity("DAL.Models.ContactPhone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaCode")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OwnerID")
                        .HasColumnType("int");

                    b.Property<byte>("OwnerType")
                        .HasColumnType("tinyint");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(10)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OwnerID", "OwnerType");

                    b.ToTable("ContactPhones");
                });

            modelBuilder.Entity("DAL.Models.ManagerList", b =>
                {
                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<byte>("Role")
                        .HasColumnType("tinyint");

                    b.HasKey("OrganizationId", "ManagerId");

                    b.ToTable("ManagerList");
                });

            modelBuilder.Entity("DAL.Models.MerchantAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<byte>("AccountType")
                        .HasColumnType("tinyint");

                    b.Property<int>("AnnualRevenue")
                        .HasColumnType("int");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayNameC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayNameE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeCount")
                        .HasColumnType("int");

                    b.Property<int>("EquityCapital")
                        .HasColumnType("int");

                    b.Property<byte>("MerchantAccountType")
                        .HasColumnType("tinyint");

                    b.Property<string>("ProxyIDNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProxyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProxyNation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterNameC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterNameE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MerchantAccounts");
                });

            modelBuilder.Entity("DAL.Models.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiredTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MerchantId")
                        .HasColumnType("int");

                    b.Property<string>("MerchantOrderNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostBackUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DAL.Models.OrderFees", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FeeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderFees");
                });

            modelBuilder.Entity("DAL.Models.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemPrice")
                        .HasColumnType("int");

                    b.Property<int>("ItemQuantity")
                        .HasColumnType("int");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("DAL.Models.OrderTransaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("OrderTransactions");
                });

            modelBuilder.Entity("DAL.Models.StaffAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<byte>("AccountType")
                        .HasColumnType("tinyint");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StaffAccounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account = "admin",
                            AccountType = (byte)1,
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 5, 11, 16, 58, 44, 705, DateTimeKind.Local).AddTicks(4154),
                            FirstName = "管理",
                            LastName = "員",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("DAL.Models.CMSPermission", b =>
                {
                    b.HasOne("DAL.Models.CMSFunction", "CMSFunction")
                        .WithMany()
                        .HasForeignKey("CMSFunctionId");

                    b.HasOne("DAL.Models.StaffAccount", null)
                        .WithMany("Permissions")
                        .HasForeignKey("StaffAccountId");

                    b.Navigation("CMSFunction");
                });

            modelBuilder.Entity("DAL.Models.ContactAddress", b =>
                {
                    b.HasOne("DAL.Models.MerchantAccount", null)
                        .WithMany("Addresses")
                        .HasForeignKey("OwnerID", "OwnerType")
                        .HasPrincipalKey("Id", "AccountType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.StaffAccount", null)
                        .WithMany("Addresses")
                        .HasForeignKey("OwnerID", "OwnerType")
                        .HasPrincipalKey("Id", "AccountType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Models.ContactEmail", b =>
                {
                    b.HasOne("DAL.Models.MerchantAccount", null)
                        .WithMany("Emails")
                        .HasForeignKey("OwnerID", "OwnerType")
                        .HasPrincipalKey("Id", "AccountType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.StaffAccount", null)
                        .WithMany("Emails")
                        .HasForeignKey("OwnerID", "OwnerType")
                        .HasPrincipalKey("Id", "AccountType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Models.ContactPhone", b =>
                {
                    b.HasOne("DAL.Models.MerchantAccount", null)
                        .WithMany("Phones")
                        .HasForeignKey("OwnerID", "OwnerType")
                        .HasPrincipalKey("Id", "AccountType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.StaffAccount", null)
                        .WithMany("Phones")
                        .HasForeignKey("OwnerID", "OwnerType")
                        .HasPrincipalKey("Id", "AccountType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Models.OrderFees", b =>
                {
                    b.HasOne("DAL.Models.Order", null)
                        .WithMany("Fees")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Models.OrderItem", b =>
                {
                    b.HasOne("DAL.Models.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Models.OrderTransaction", b =>
                {
                    b.HasOne("DAL.Models.Order", null)
                        .WithOne("Transaction")
                        .HasForeignKey("DAL.Models.OrderTransaction", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Models.MerchantAccount", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Emails");

                    b.Navigation("Phones");
                });

            modelBuilder.Entity("DAL.Models.Order", b =>
                {
                    b.Navigation("Fees");

                    b.Navigation("Items");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("DAL.Models.StaffAccount", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Emails");

                    b.Navigation("Permissions");

                    b.Navigation("Phones");
                });
#pragma warning restore 612, 618
        }
    }
}
